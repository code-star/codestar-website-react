{"version":3,"sources":["JobDescription/JobDescription.tsx"],"names":["JobDescription","props","this","path","t","_t$path","returnObjects","title","tagline","client_case","paragraphs","commonParagraphs","react__WEBPACK_IMPORTED_MODULE_5__","className","style","backgroundColor","_Container_Container__WEBPACK_IMPORTED_MODULE_10__","marginTopNavBar","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","variant","gutterBottom","concat","map","paragraph","i","key","content","list","paragraphText","textIndex","classes","button","color","component","href","_material_ui_icons__WEBPACK_IMPORTED_MODULE_8__","leftIcon","note","repeat","React","compose","translate","wait","withStyles","theme","margin","spacing","unit","marginRight"],"mappings":"wMAuCMA,mLAIF,IAAMC,EAAQC,KAAKD,MACXE,EAAYF,EAAZE,KAAMC,EAAMH,EAANG,EAFAC,EAGsCD,EAAE,OAAQ,CAC5DE,eAAe,IACdH,GAFKI,EAHMF,EAGNE,MAAOC,EAHDH,EAGCG,QAASC,EAHVJ,EAGUI,YAAaC,EAHvBL,EAGuBK,WAG/BC,EAAmBP,EAAE,8BAA+B,CACxDE,eAAe,IAGjB,OACEM,EAAA,yBACEA,EAAA,yBAASC,UAAU,OAAOC,MAAO,CAAEC,gBAAiB,YAClDH,EAAA,cAACI,EAAA,EAAD,CAAWC,iBAAe,GACxBL,EAAA,qBAAKC,UAAU,8BACbD,EAAA,qBAAKC,UAAU,mBACbD,EAAA,cAACM,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAClCb,GAEHK,EAAA,cAACM,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAClCZ,GAEHI,EAAA,uBACEA,EAAA,uBAAIR,EAAE,2BADR,KACyCK,GAGxCC,EACEW,OAAOV,GACPW,IAAI,SAACC,EAAyBC,GAA1B,OACHZ,EAAA,qBAAKa,IAAKD,EAAGX,UAAU,OACrBD,EAAA,qBAAKC,UAAU,OACbD,EAAA,wBAAKW,EAAUhB,OACfK,EAAA,uBAAIW,EAAUG,SACbH,EAAUI,KACTf,EAAA,wBACGW,EAAUI,KAAKL,IACd,SAACM,EAAuBC,GAAxB,OACEjB,EAAA,oBAAIa,IAAKI,GAAYD,MAIzB,SAKZhB,EAAA,cAACM,EAAA,EAAD,CACEL,UAAWZ,EAAM6B,QAAQC,OACzBZ,QAAQ,YACRa,MAAM,UACNC,UAAU,IACVC,KAAK,6BAELtB,EAAA,cAACuB,EAAA,EAAD,CAAOtB,UAAWZ,EAAM6B,QAAQM,WAC/BhC,EAAE,wBAGLQ,EAAA,qBAAKC,UAAU,aACZT,EAAE,aAAc,CAAEE,eAAe,IAAQgB,IACxC,SAACe,EAAcb,GAAf,OACEZ,EAAA,qBAAKa,IAAKD,GACRZ,EAAA,2BACG,IAAI0B,OAAOd,EAAI,GACfa,mBAlEEE,aAiFdC,sBACbC,YAAU,CAAC,QAAS,CAAEC,MAAM,IAC5BC,qBAlGyC,SAACC,GAAD,MAAmB,CAC5Db,OAAQ,CACNc,OAAQD,EAAME,QAAQC,MAExBX,SAAU,CACRY,YAAaJ,EAAME,QAAQC,SA2FhBP,CAGbxC","file":"static/js/17.cb0ad61c.chunk.js","sourcesContent":["import * as React from 'react';\nimport { translate, TranslationFunction } from 'react-i18next';\nimport { Button, Typography } from '@material-ui/core';\nimport { Email } from '@material-ui/icons';\nimport {\n  withStyles,\n  WithStyles,\n  StyleRulesCallback,\n  Theme,\n} from '@material-ui/core/styles';\nimport Container from '../Container/Container';\nimport { compose } from 'recompose';\n\nexport type JobDescriptionOuterProps = Readonly<{\n  name: string;\n  path: string;\n  image: string;\n}>;\n\ntype JobDescriptionInnerProps = Readonly<{\n  t: TranslationFunction;\n  classes: WithStyles['classes'];\n}>;\n\nconst styles: StyleRulesCallback<string> = (theme: Theme) => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\ntype JobParagraph = Readonly<{\n  title: string;\n  content: string;\n  list?: string[];\n}>;\n\nclass JobDescription extends React.Component<\n  JobDescriptionOuterProps & JobDescriptionInnerProps\n> {\n  public render() {\n    const props = this.props;\n    const { path, t } = props;\n    const { title, tagline, client_case, paragraphs } = t('JOBS', {\n      returnObjects: true,\n    })[path];\n    const commonParagraphs = t('jobs:JOBS_COMMON_PARAGRAPHS', {\n      returnObjects: true,\n    });\n\n    return (\n      <div>\n        <section className=\"py-3\" style={{ backgroundColor: '#eeeeee' }}>\n          <Container marginTopNavBar>\n            <div className=\"row justify-content-center\">\n              <div className=\"col-12 col-lg-8\">\n                <Typography variant=\"h2\" gutterBottom>\n                  {title}\n                </Typography>\n                <Typography variant=\"h5\" gutterBottom>\n                  {tagline}\n                </Typography>\n                <p>\n                  <b>{t('JOBS_CLIENT_CASE_LABEL')}</b>: {client_case}\n                </p>\n\n                {paragraphs\n                  .concat(commonParagraphs)\n                  .map((paragraph: JobParagraph, i: number) => (\n                    <div key={i} className=\"row\">\n                      <div className=\"col\">\n                        <h4>{paragraph.title}</h4>\n                        <p>{paragraph.content}</p>\n                        {paragraph.list ? (\n                          <ul>\n                            {paragraph.list.map(\n                              (paragraphText: string, textIndex: number) => (\n                                <li key={textIndex}>{paragraphText}</li>\n                              )\n                            )}\n                          </ul>\n                        ) : null}\n                      </div>\n                    </div>\n                  ))}\n\n                <Button\n                  className={props.classes.button}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  component=\"a\"\n                  href=\"mailto:codestar@ordina.nl\"\n                >\n                  <Email className={props.classes.leftIcon} />\n                  {t('JOBS_CONTACT_BUTTON')}\n                </Button>\n\n                <div className=\"pt-5 pb-3\">\n                  {t('JOBS_NOTES', { returnObjects: true }).map(\n                    (note: string, i: number) => (\n                      <div key={i}>\n                        <small>\n                          {'*'.repeat(i + 1)}\n                          {note}\n                        </small>\n                      </div>\n                    )\n                  )}\n                </div>\n              </div>\n            </div>\n          </Container>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default compose<JobDescriptionOuterProps & JobDescriptionInnerProps, {}>(\n  translate(['jobs'], { wait: true }),\n  withStyles(styles)\n)(JobDescription);\n"],"sourceRoot":""}